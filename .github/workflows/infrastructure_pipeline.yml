name: Infrastructure Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up OpenStack CLI and YAML Linter
        run: |
          sudo apt update
          sudo apt install -y python3-openstackclient python3-heatclient yamllint

      - name: Lint Yaml file
        run: yamllint heat.yaml

      - name: Configure OpenStack Environment
        env:
          OS_AUTH_URL: ${{ secrets.OS_AUTH_URL }}
          OS_PROJECT_NAME: ${{ secrets.OS_PROJECT_NAME }}
          OS_USERNAME: ${{ secrets.OS_USERNAME }}
          OS_PASSWORD: ${{ secrets.OS_PASSWORD }}
          OS_REGION_NAME: ${{ secrets.OS_REGION_NAME }}
          OS_USER_DOMAIN_NAME: ${{ secrets.OS_USER_DOMAIN_NAME }}
          OS_PROJECT_DOMAIN_ID: ${{ secrets.OS_PROJECT_DOMAIN_ID }}
          OS_PROJECT_ID: ${{ secrets.OS_PROJECT_ID }}
          OS_IDENTITY_API_VERSION: ${{ secrets.OS_IDENTITY_API_VERSION }}
          OS_INTERFACE: ${{ secrets.OS_INTERFACE }}
        run: echo "Configured OpenStack environment variables."

      - name: Deploy or Update OpenStack Stack
        env:
          OS_AUTH_URL: ${{ secrets.OS_AUTH_URL }}
          OS_PROJECT_NAME: ${{ secrets.OS_PROJECT_NAME }}
          OS_USERNAME: ${{ secrets.OS_USERNAME }}
          OS_PASSWORD: ${{ secrets.OS_PASSWORD }}
          OS_REGION_NAME: ${{ secrets.OS_REGION_NAME }}
          OS_USER_DOMAIN_NAME: ${{ secrets.OS_USER_DOMAIN_NAME }}
          OS_PROJECT_DOMAIN_ID: ${{ secrets.OS_PROJECT_DOMAIN_ID }}
          OS_PROJECT_ID: ${{ secrets.OS_PROJECT_ID }}
          OS_IDENTITY_API_VERSION: ${{ secrets.OS_IDENTITY_API_VERSION }}
          OS_INTERFACE: ${{ secrets.OS_INTERFACE }}
        run: |
          if openstack stack show infrastructure-delivery-pipeline-stack >/dev/null 2>&1; then
            echo "Updating existing stack..."
            openstack stack update --existing --template heat.yaml infrastructure-delivery-pipeline-stack
          else
            echo "Creating new stack..."
            openstack stack create --template heat.yaml infrastructure-delivery-pipeline-stack
          fi

      - name: Build Docker Image
        run: |
          sudo docker build -t todo-app .

      - name: Push Docker Image to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker tag todo-app ${{ secrets.DOCKER_USERNAME }}/todo-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/todo-app:latest

      - name: Deploy Docker Container
        env:
          FLOATING_IP: ${{ secrets.FLOATING_IP }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@$FLOATING_IP "
            docker stop todo-app || true
            docker rm todo-app || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/todo-app:latest
            docker run -d -p 3000:3000 --name todo-app ${{ secrets.DOCKER_USERNAME }}/todo-app:latest
          "


